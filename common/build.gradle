apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion

    //通过注解支持kotlin数据类序列化
    androidExtensions {
        experimental = true
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

//依赖冲突解决，强制jar包版本
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "$supportVersion"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    api "com.android.support:appcompat-v7:$supportVersion"
    api "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    testApi"junit:junit:$junitVersion"
    androidTestApi"com.android.support.test:runner:$testRunnerVersion"
    androidTestApi "com.android.support.test.espresso:espresso-core:$espressoVersion"
    //友盟
    api "com.umeng.umsdk:common:$yMengVersion"
    api "com.umeng.umsdk:analytics:$yMengAnalVersion"
    //ARouter
    api "com.alibaba:arouter-api:$arouterApiVersion"
}
